asyncapi: 3.0.0
info:
  title: Team Chat API - RTM
  version: 1.0.0
  description: |
    Team Chat API by text is a backend service that allows for communication between users using either a websocket or the HTTP protocol. <br>
    The communication can happen on public channels or via direct messages. <br>
    This service stores messaging history and allows users to get previous messages from the channels they have joined. <br>
  tags:
    - name: Login
      description: All authentication related operations.
    - name: Channels
      description: All operations related to channels management.
    - name: Messages
      description: All operations related to messaging.
    - name: Reactions
      description: All operations related to reactions.
servers:
  production:
    host: api.text.com
    pathname: /chat/ws
    description: Team Chat API URL.
    protocol: wss
channels:
  ws:
    address: ws
    messages:
      LoginRequest:
        $ref: '#/components/messages/LoginRequest'
      LoginResponse:
        $ref: '#/components/messages/LoginResponse'
      SendMessageRequest:
        $ref: '#/components/messages/SendMessageRequest'
      SendMessageResponse:
        $ref: '#/components/messages/SendMessageResponse'
      IncomingMessage:
        $ref: '#/components/messages/IncomingMessage'
      MarkMessagesAsSeenRequest:
        $ref: '#/components/messages/MarkMessagesAsSeenRequest'
      MarkMessagesAsSeenResponse:
        $ref: '#/components/messages/MarkMessagesAsSeenResponse'
      MessagesMarkedAsSeen:
        $ref: '#/components/messages/MessagesMarkedAsSeen'
      GetMessagesRequest:
        $ref: '#/components/messages/GetMessagesRequest'
      GetMessagesResponse:
        $ref: '#/components/messages/GetMessagesResponse'
      AddReactionRequest:
        $ref: '#/components/messages/AddReactionRequest'
      AddReactionResponse:
        $ref: '#/components/messages/AddReactionResponse'
      ReactionAdded:
        $ref: '#/components/messages/ReactionAdded'
      RemoveReactionRequest:
        $ref: '#/components/messages/RemoveReactionRequest'
      RemoveReactionResponse:
        $ref: '#/components/messages/RemoveReactionResponse'
      ReactionRemoved:
        $ref: '#/components/messages/ReactionRemoved'
      CreateChannelRequest:
        $ref: '#/components/messages/CreateChannelRequest'
      CreateChannelResponse:
        $ref: '#/components/messages/CreateChannelResponse'
      ChannelCreated:
        $ref: '#/components/messages/ChannelCreated'
      RenameChannelRequest:
        $ref: '#/components/messages/RenameChannelRequest'
      RenameChannelResponse:
        $ref: '#/components/messages/RenameChannelResponse'
      ChannelRenamed:
        $ref: '#/components/messages/ChannelRenamed'
      ArchiveChannelRequest:
        $ref: '#/components/messages/ArchiveChannelRequest'
      ArchiveChannelResponse:
        $ref: '#/components/messages/ArchiveChannelResponse'
      ChannelArchived:
        $ref: '#/components/messages/ChannelArchived'
      UnarchiveChannelRequest:
        $ref: '#/components/messages/UnarchiveChannelRequest'
      UnarchiveChannelResponse:
        $ref: '#/components/messages/UnarchiveChannelResponse'
      ChannelUnarchived:
        $ref: '#/components/messages/ChannelUnarchived'
      AddUserToChannelRequest:
        $ref: '#/components/messages/AddUserToChannelRequest'
      AddUserToChannelResponse:
        $ref: '#/components/messages/AddUserToChannelResponse'
      UserAddedToChannel:
        $ref: '#/components/messages/UserAddedToChannel'
      RemoveUserFromChannelRequest:
        $ref: '#/components/messages/RemoveUserFromChannelRequest'
      RemoveUserFromChannelResponse:
        $ref: '#/components/messages/RemoveUserFromChannelResponse'
      UserRemovedFromChannel:
        $ref: '#/components/messages/UserRemovedFromChannel'
      GetChannelRequest:
        $ref: '#/components/messages/GetChannelRequest'
      GetChannelResponse:
        $ref: '#/components/messages/GetChannelResponse'
      ListChannelsRequest:
        $ref: '#/components/messages/ListChannelsRequest'
      ListChannelsResponse:
        $ref: '#/components/messages/ListChannelsResponse'
      ListArchivedChannelsRequest:
        $ref: '#/components/messages/ListArchivedChannelsRequest'
      ListArchivedChannelsResponse:
        $ref: '#/components/messages/ListArchivedChannelsResponse'
operations:
  login:
    action: send
    title: Login with access token
    description: |
      Authenticates the user with the access token 
      and returns the account and organization IDs.
    messages:
      - $ref: '#/channels/ws/messages/LoginRequest'
    reply:
      messages:
        - $ref: '#/channels/ws/messages/LoginResponse'
    channel:
      $ref: '#/channels/ws'
  sendMessage:
    action: send
    title: Send a message
    description: |
      Sends a message to the channel 
      and returns the ID of the sent message.
    messages:
      - $ref: '#/channels/ws/messages/SendMessageRequest'
    reply:
      messages:
        - $ref: '#/channels/ws/messages/SendMessageResponse'
    channel:
      $ref: '#/channels/ws'
  markMessagesAsSeen:
    action: send
    title: Mark messages as seen
    description: |
      Marks messages as seen in the channel.
    messages:
      - $ref: '#/channels/ws/messages/MarkMessagesAsSeenRequest'
    reply:
      messages:
        - $ref: '#/channels/ws/messages/MarkMessagesAsSeenResponse'
    channel:
      $ref: '#/channels/ws'
  getMessages:
    action: send
    title: Get messages from channel
    description: Returns the list of messages in the channel.
    messages:
      - $ref: '#/channels/ws/messages/GetMessagesRequest'
    reply:
      messages:
        - $ref: '#/channels/ws/messages/GetMessagesResponse'
    channel:
      $ref: '#/channels/ws'
  addReaction:
    action: send
    title: Add a reaction to a message
    description: Adds a reaction to a message.
    messages:
      - $ref: '#/channels/ws/messages/AddReactionRequest'
    reply:
      messages:
        - $ref: '#/channels/ws/messages/AddReactionResponse'
    channel:
      $ref: '#/channels/ws'
  removeReaction:
    action: send
    title: Remove a reaction from a message
    description: Removes a reaction from a message.
    messages:
      - $ref: '#/channels/ws/messages/RemoveReactionRequest'
    reply:
      messages:
        - $ref: '#/channels/ws/messages/RemoveReactionResponse'
    channel:
      $ref: '#/channels/ws'
  createChannel:
    action: send
    title: Create a channel
    description: Creates a channel.
    messages:
      - $ref: '#/channels/ws/messages/CreateChannelRequest'
    reply:
      messages:
        - $ref: '#/channels/ws/messages/CreateChannelResponse'
    channel:
      $ref: '#/channels/ws'
  renameChannel:
    action: send
    title: Rename a channel
    description: Renames a channel. Works only for public, non-`general` channels.
    messages:
      - $ref: '#/channels/ws/messages/RenameChannelRequest'
    reply:
      messages:
        - $ref: '#/channels/ws/messages/RenameChannelResponse'
    channel:
      $ref: '#/channels/ws'
  archiveChannel:
    action: send
    title: Archive a channel
    description: Archives a channel. Works only for public, non-`general` channels.
    messages:
      - $ref: '#/channels/ws/messages/ArchiveChannelRequest'
    reply:
      messages:
        - $ref: '#/channels/ws/messages/ArchiveChannelResponse'
    channel:
      $ref: '#/channels/ws'
  unarchiveChannel:
    action: send
    title: Unarchive a channel
    description: Unarchives a channel.
    messages:
      - $ref: '#/channels/ws/messages/UnarchiveChannelRequest'
    reply:
      messages:
        - $ref: '#/channels/ws/messages/UnarchiveChannelResponse'
    channel:
      $ref: '#/channels/ws'
  getChannel:
    action: send
    title: Get channel
    description: Get non-archived channel by ID.
    messages:
      - $ref: '#/channels/ws/messages/GetChannelRequest'
    reply:
      messages:
        - $ref: '#/channels/ws/messages/GetChannelResponse'
    channel:
      $ref: '#/channels/ws'
  listChannels:
    action: send
    title: List channels
    description: Lists all non-archived channels.
    messages:
      - $ref: '#/channels/ws/messages/ListChannelsRequest'
    reply:
      messages:
        - $ref: '#/channels/ws/messages/ListChannelsResponse'
    channel:
      $ref: '#/channels/ws'
  listArchivedChannels:
    action: send
    title: List archived channels
    description: Lists all archived channels.
    messages:
      - $ref: '#/channels/ws/messages/ListArchivedChannelsRequest'
    reply:
      messages:
        - $ref: '#/channels/ws/messages/ListArchivedChannelsResponse'
    channel:
      $ref: '#/channels/ws'
  addUserToChannel:
    action: send
    title: Add a user to a channel
    description: Adds a user to a channel.
    messages:
      - $ref: '#/channels/ws/messages/AddUserToChannelRequest'
    reply:
      messages:
        - $ref: '#/channels/ws/messages/AddUserToChannelResponse'
    channel:
      $ref: '#/channels/ws'
  removeUserFromChannel:
    action: send
    title: Remove a user from a channel
    description: Removes a user from a channel.
    messages:
      - $ref: '#/channels/ws/messages/RemoveUserFromChannelRequest'
    reply:
      messages:
        - $ref: '#/channels/ws/messages/RemoveUserFromChannelResponse'
    channel:
      $ref: '#/channels/ws'
  incomingMessage:
    action: receive
    title: A push which informs about a new message
    description: |
      Informs about a new message in a channel where the user is present.
    messages:
      - $ref: '#/channels/ws/messages/IncomingMessage'
    channel:
      $ref: '#/channels/ws'
  messagesMarkedAsSeen:
    action: receive
    title: A push which informs about messages marked as seen
    description: |
      Informs about messages marked as seen in a channel where the user is present.
    messages:
      - $ref: '#/channels/ws/messages/MessagesMarkedAsSeen'
    channel:
      $ref: '#/channels/ws'
  reactionAdded:
    action: receive
    title: A push which informs about a reaction added to a message
    description: |
      Informs about a reaction added to a message in a channel where the user is present.
    messages:
      - $ref: '#/channels/ws/messages/ReactionAdded'
    channel:
      $ref: '#/channels/ws'
  reactionRemoved:
    action: receive
    title: A push which is sent when someone has removed a reaction to a message
    description: |
      Informs about a reaction removed from a message in a channel where the user is present.
    messages:
      - $ref: '#/channels/ws/messages/ReactionRemoved'
    channel:
      $ref: '#/channels/ws'
  channelCreated:
    action: receive
    title: A push which informs about created channel
    description: |
      Informs about created channel.
    messages:
      - $ref: '#/channels/ws/messages/ChannelCreated'
    channel:
      $ref: '#/channels/ws'
  channelRenamed:
    action: receive
    title: A push which informs about renamed channel
    description: |
      Informs about renamed channel.
    messages:
      - $ref: '#/channels/ws/messages/ChannelRenamed'
    channel:
      $ref: '#/channels/ws'
  channelArchived:
    action: receive
    title: A push which informs about archived channel
    description: |
      Informs about archived channel.
    messages:
      - $ref: '#/channels/ws/messages/ChannelArchived'
    channel:
      $ref: '#/channels/ws'
  channelUnarchived:
    action: receive
    title: A push which informs about unarchived channel
    description: |
      Informs about unarchived channel.
    messages:
      - $ref: '#/channels/ws/messages/ChannelUnarchived'
    channel:
      $ref: '#/channels/ws'
  userAddedToChannel:
    action: receive
    title: A push which informs about a user added to a channel
    description: |
      Informs about a user added to a channel.
    messages:
      - $ref: '#/channels/ws/messages/UserAddedToChannel'
    channel:
      $ref: '#/channels/ws'
  userRemovedFromChannel:
    action: receive
    title: A push which informs about a user removed from a channel
    description: |
      Informs about a user removed from a channel.
    messages:
      - $ref: '#/channels/ws/messages/UserRemovedFromChannel'
    channel:
      $ref: '#/channels/ws'
components:
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
      description: Provide Basic scheme while authenticating with Global Accounts Personal Access Tokens.
    BearerAuth:
      type: http
      scheme: bearer
      description: |
        Provide a Bearer scheme for Global Accounts OAuth 2.0 agent access token
        or authenticate as bot with JSON Web Token,
        obtained with `issue_bot_token` LiveChat Configuration API endpoint.<br>
        You can find the documentation at:<br>
        https://platform.text.com/docs/authorization/agent-authorization<br>
        https://platform.text.com/docs/management/configuration-api#issue-bot-token<br>
  messages:
    LoginRequest:
      name: LoginRequest
      title: login request
      description: |
        Message containing an access token 
        sent by the client to authenticate the user.
      contentType: application/json
      tags:
        - name: Login
      payload:
        type: object
        additionalProperties: false
        required:
          - action
          - payload
        properties:
          action:
            type: string
            const: login
          request_id:
            $ref: '#/components/schemas/RequestId'
          payload:
            type: object
            additionalProperties: false
            required:
              - token
              - product_name
            properties:
              token:
                type: string
                description: Access token of `basic` or `bearer` scheme.
              product_name:
                type: string
                enum:
                  - LiveChat
                  - TeamChat
                description: Product name from where connection is established.
      examples:
        - name: LoginRequestExample
          summary: A login request example
          payload:
            action: login
            request_id: foo-baz-bar-420
            payload:
              token: 'Bearer dal:ZHVwYWth531'
              product_name: 'LiveChat'
    LoginResponse:
      name: LoginResponse
      title: login response
      description: Message sent by the server as a response to the login request.
      contentType: application/json
      tags:
        - name: Login
      payload:
        type: object
        additionalProperties: false
        required:
          - action
          - success
          - payload
        properties:
          request_id:
            $ref: '#/components/schemas/RequestId'
          success:
            $ref: '#/components/schemas/Success'
          action:
            type: string
            const: login
          payload:
            type: object
            description: Payload of the response.
            oneOf:
              - $ref: '#/components/schemas/LoginResponsePayload'
              - $ref: '#/components/schemas/ErrorPayload'
      examples:
        - name: LoginResponseExampleOK
          summary: A login response example with success
          payload:
            action: login
            request_id: foo-baz-bar-420
            type: response
            success: true
            payload:
              account_id: 8d27fb87-9421-46d7-9a37-286d9ff7bbf4
              organization_id: 5c4bf6b1-d622-4ee1-b5b2-f7bd9f966ae7
        - name: LoginResponseExampleError
          summary: A login response example with error
          payload:
            action: login
            request_id: foo-baz-bar-420
            type: response
            success: false
            payload:
              error:
                type: validation
                message: Invalid access token
    SendMessageRequest:
      name: SendMessageRequest
      title: send_message request
      description: Contains a message to be sent by the client to the server.
      contentType: application/json
      tags:
        - name: Messages
      payload:
        type: object
        additionalProperties: false
        required:
          - action
          - payload
        properties:
          action:
            type: string
            const: send_message
          request_id:
            $ref: '#/components/schemas/RequestId'
          payload:
            type: object
            additionalProperties: false
            required:
              - channel_id
              - message
            properties:
              channel_id:
                type: string
                format: uuid
                description: ID of the channel to send the message to.
              message:
                type: object
                oneOf:
                  - type: object
                    title: Text message
                    required:
                      - type
                      - text
                    properties:
                      type:
                        type: string
                        description: Message type (text).
                        const: text
                      text:
                        type: string
                        description: Message text.
                        example: Hello, World!
                  - type: object
                    title: File message
                    description: File message.
                    required:
                      - type
                      - url
                    properties:
                      type:
                        type: string
                        description: Message type (file).
                        const: file
                      url:
                        type: string
                        format: uri
                        description: URL of the temporarily uploaded file.
                        example: https://cdn.files-text.com/api/chatapi/tmp/248d7a51-fc88-4495-81e2-ce4538649432/90441146b7798452df136d46d13ab0ed/test.txt
      examples:
        - name: SendMessageRequestExample
          summary: A send_message request example
          payload:
            action: send_message
            request_id: foo-baz-bar-420
            payload:
              channel_id: 8eca5ad8-f7eb-471e-9682-57f658ff9091
              message:
                type: text
                text: Hello World!
    SendMessageResponse:
      name: SendMessageResponse
      title: send_message response
      description: Message sent by the server as a response to the send message request.
      contentType: application/json
      tags:
        - name: Messages
      payload:
        type: object
        additionalProperties: false
        required:
          - action
          - success
          - payload
        properties:
          request_id:
            $ref: '#/components/schemas/RequestId'
          success:
            $ref: '#/components/schemas/Success'
          action:
            const: send_message
          payload:
            type: object
            description: Payload of the response.
            oneOf:
              - $ref: '#/components/schemas/SendMessageResponsePayload'
              - $ref: '#/components/schemas/ErrorPayload'
      examples:
        - name: SendMessageResponseExampleOK
          summary: A send_message response example with success
          payload:
            action: send_message
            request_id: foo-baz-bar-420
            type: response
            success: true
            payload:
              message_id: 0a478f14-ac8a-4b54-bc5b-51b5f00ccec5
        - name: SendMessageResponseExampleError
          summary: A send_message response example with error
          payload:
            action: send_message
            request_id: foo-baz-bar-420
            type: response
            success: false
            payload:
              error:
                type: validation
                message: invalid message format
    IncomingMessage:
      name: IncomingMessage
      title: incoming_message push
      description: |
        A message from the server to the clients subscribed to the channel, 
        sent when a new message is received.
      contentType: application/json
      tags:
        - name: Messages
      payload:
        type: object
        additionalProperties: false
        required:
          - action
          - type
          - payload
        properties:
          action:
            type: string
            const: incoming_message
          type:
            type: string
            const: push
          payload:
            type: object
            additionalProperties: false
            required:
              - channel_id
              - message
            properties:
              channel_id:
                type: string
                format: uuid
                description: ID of the channel where the message was received.
              message:
                $ref: '#/components/schemas/Message'
      examples:
        - name: IncomingMessageExample
          summary: An incoming_message push example
          payload:
            action: incoming_message
            type: push
            payload:
              channel_id: 8eca5ad8-f7eb-471e-9682-57f658ff9091
              author_id: 8eca5ad7-f7eb-471e-9682-57f658ff9091
              message_id: 0a478f14-ac8a-4b54-bc5b-51b5f00ccec5
              created_at: '2024-01-24T12:36:05.987197Z'
              text: Hello World!
    MarkMessagesAsSeenRequest:
      name: MarkMessagesAsSeenRequest
      title: mark_messages_as_seen request
      description: |
        Message containing a request to mark messages as seen 
        in the requested channel.
      contentType: application/json
      tags:
        - name: Messages
      payload:
        type: object
        additionalProperties: false
        required:
          - action
          - payload
        properties:
          action:
            type: string
            const: mark_messages_as_seen
          request_id:
            $ref: '#/components/schemas/RequestId'
          payload:
            type: object
            additionalProperties: false
            required:
              - channel_id
              - seen_up_to
            properties:
              channel_id:
                type: string
                format: uuid
                description: ID of the channel to mark messages as seen.
              seen_up_to:
                type: string
                format: date-time
                description: Date of the last message seen by the requester.
      examples:
        - name: MarkMessagesAsSeenRequestExample
          summary: A mark_messages_as_seen request example
          payload:
            action: mark_messages_as_seen
            request_id: foo-baz-bar-420
            payload:
              channel_id: 8eca5ad8-f7eb-471e-9682-57f658ff9091
              seen_up_to: 2024-01-24T12:36:05.987197Z
    MarkMessagesAsSeenResponse:
      name: MarkMessagesAsSeenResponse
      title: mark_messages_as_seen response
      description: Message sent by the server as a response to the mark messages as seen request.
      contentType: application/json
      tags:
        - name: Messages
      payload:
        type: object
        additionalProperties: false
        required:
          - action
          - success
          - payload
        properties:
          request_id:
            $ref: '#/components/schemas/RequestId'
          success:
            $ref: '#/components/schemas/Success'
          action:
            const: mark_messages_as_seen
          payload:
            type: object
            description: Payload of the response.
            oneOf:
              - $ref: '#/components/schemas/EmptyPayload'
              - $ref: '#/components/schemas/ErrorPayload'
      examples:
        - name: MarkMessagesAsSeenResponseExampleOK
          summary: A mark_messages_as_seen response example with success
          payload:
            action: mark_messages_as_seen
            request_id: foo-baz-bar-420
            type: response
            success: true
            payload: {}
        - name: MarkMessagesAsSeenResponseExampleError
          summary: A mark_messages_as_seen response example with error
          payload:
            action: mark_messages_as_seen
            request_id: foo-baz-bar-420
            type: response
            success: false
            payload:
              error:
                type: validation
                message: invalid message format
    MessagesMarkedAsSeen:
      name: MessagesMarkedAsSeen
      title: messages_marked_as_seen push
      description: |
        A message from the server to the clients subscribed to the channel, 
        sent when messages are marked as seen.
      contentType: application/json
      tags:
        - name: Messages
      payload:
        type: object
        additionalProperties: false
        required:
          - action
          - type
          - payload
        properties:
          action:
            type: string
            const: messages_marked_as_seen
          type:
            type: string
            const: push
          payload:
            type: object
            additionalProperties: false
            required:
              - channel_id
              - seen_up_to
            properties:
              channel_id:
                type: string
                format: uuid
                description: ID of the channel where the messages were marked as seen.
              seen_up_to:
                type: string
                format: date-time
                description: Date of the last message seen by the requester.
      examples:
        - name: MessagesMarkedAsSeenExample
          summary: An messages_marked_as_seen push example
          payload:
            action: messages_marked_as_seen
            type: push
            payload:
              channel_id: 8eca5ad8-f7eb-471e-9682-57f658ff9091
              seen_up_to: '2024-01-24T12:36:05.987197Z'
    GetMessagesRequest:
      name: GetMessagesRequest
      title: get_messages request
      description: |
        Message containing a request to get messages 
        in the requested channel.
      contentType: application/json
      tags:
        - name: Messages
      payload:
        type: object
        additionalProperties: false
        required:
          - action
          - payload
        properties:
          action:
            type: string
            const: get_messages
          request_id:
            $ref: '#/components/schemas/RequestId'
          payload:
            type: object
            additionalProperties: false
            required:
              - channel_id
            properties:
              channel_id:
                type: string
                format: uuid
                description: ID of the channel to get messages from.
              limit:
                type: integer
                minimum: 1
                maximum: 100
                description: Number of messages to return on one page. The default value is 25.
              sort_order:
                type: string
                enum:
                  - asc
                  - desc
                description: Sort order of the messages. The default value is `desc`.
              page_id:
                type: string
                description: ID of the page. It cannot be combined with the `limit` or `sort_order` parameters.
      examples:
        - name: GetMessagesRequestExample
          summary: A basic get_messages request example
          payload:
            action: get_messages
            request_id: foo-baz-bar-420
            payload:
              channel_id: 8eca5ad8-f7eb-471e-9682-57f658ff9091
    GetMessagesResponse:
      name: GetMessagesResponse
      title: get_messages response
      description: Message sent by the server as a response to the get messages request.
      contentType: application/json
      tags:
        - name: Messages
      payload:
        type: object
        additionalProperties: false
        required:
          - action
          - success
          - payload
        properties:
          request_id:
            $ref: '#/components/schemas/RequestId'
          success:
            $ref: '#/components/schemas/Success'
          action:
            type: string
            const: get_messages
          payload:
            type: object
            description: Payload of the response.
            oneOf:
              - $ref: '#/components/schemas/GetMessagesResponsePayload'
              - $ref: '#/components/schemas/ErrorPayload'
      examples:
        - name: GetMessagesResponseExampleOK
          summary: A get_messages response example with success
          payload:
            action: get_messages
            request_id: foo-baz-bar-420
            type: response
            success: true
            next_page_id: MjEzNzphc2M6MDp0cnVlOjY5
            payload:
              channel_id: 8eca5ad8-f7eb-471e-9682-57f658ff9091
              total: 1
              messages:
                - message_id: 0a478f14-ac8a-4b54-bc5b-51b5f00ccec5
                  author_id: 8eca5ad7-f7eb-471e-9682-57f658ff9091
                  created_at: '2024-01-24T12:36:05.987197Z'
                  text: Hello World!
                  reactions:
                    - shortcode: thumbsup
                      author_ids:
                        - 8eca5ad7-f7eb-471e-9682-57f658ff9091
        - name: GetMessagesResponseExampleError
          summary: A get_messages response example with error
          payload:
            action: get_messages
            request_id: foo-baz-bar-420
            type: response
            success: false
            payload:
              error:
                type: validation
                message: Invalid `channel_id` provided.
    AddReactionRequest:
      name: AddReactionRequest
      title: add_reaction request
      description: Message containing a request to add a reaction to a message.
      contentType: application/json
      tags:
        - name: Messages
        - name: Reactions
      payload:
        type: object
        additionalProperties: false
        required:
          - action
          - payload
        properties:
          action:
            type: string
            const: add_reaction
          request_id:
            $ref: '#/components/schemas/RequestId'
          payload:
            type: object
            additionalProperties: false
            required:
              - channel_id
              - message_id
              - shortcode
            properties:
              channel_id:
                type: string
                description: ID of the channel with the message.
              message_id:
                type: string
                format: uuid
                description: ID of the message to react to.
              shortcode:
                $ref: '#/components/schemas/ReactionShortcode'
      examples:
        - name: AddReactionRequestExample
          summary: An add_reaction request example
          payload:
            action: add_reaction
            request_id: foo-baz-bar-420
            payload:
              channel_id: 8eca5ad8-f7eb-471e-9682-57f658ff9091
              message_id: 0a478f14-ac8a-4b54-bc5b-51b5f00ccec5
              shortcode: thumbsup
    AddReactionResponse:
      name: AddReactionResponse
      title: add_reaction response
      description: Message sent by the server as a response to the add_reaction request.
      contentType: application/json
      tags:
        - name: Messages
        - name: Reactions
      payload:
        type: object
        additionalProperties: false
        required:
          - action
          - success
          - payload
        properties:
          request_id:
            $ref: '#/components/schemas/RequestId'
          success:
            $ref: '#/components/schemas/Success'
          action:
            type: string
            const: add_reaction
          payload:
            type: object
            description: Payload of the response.
            oneOf:
              - $ref: '#/components/schemas/EmptyPayload'
              - $ref: '#/components/schemas/ErrorPayload'
      examples:
        - name: AddReactionResponseExampleOK
          summary: An add_reaction response example with success
          payload:
            request_id: foo-baz-bar-420
            type: response
            success: true
            action: add_reaction
            payload: {}
        - name: AddReactionResponseExampleError
          summary: An add_reaction response example with error
          payload:
            request_id: foo-baz-bar-420
            success: false
            action: add_reaction
            payload:
              error:
                type: validation
                message: invalid message format
    ReactionAdded:
      name: ReactionAdded
      title: reaction_added push
      description: |
        A message from the server to the clients subscribed to the channel, 
        sent when a reaction is added to a message.
      contentType: application/json
      tags:
        - name: Messages
        - name: Reactions
      payload:
        type: object
        additionalProperties: false
        required:
          - action
          - type
          - payload
        properties:
          action:
            type: string
            const: reaction_added
          type:
            type: string
            const: push
          payload:
            type: object
            additionalProperties: false
            required:
              - channel_id
              - author_id
              - message_id
              - shortcode
            properties:
              channel_id:
                type: string
                description: ID of the channel where the reaction was added.
              message_id:
                type: string
                format: uuid
                description: ID of the message the reaction was added to.
              shortcode:
                $ref: '#/components/schemas/ReactionShortcode'
              author_id:
                type: string
                format: uuid
                description: ID of the user who added the reaction.
      examples:
        - name: ReactionAddedExample
          summary: A reaction_added push example
          payload:
            action: reaction_added
            type: push
            payload:
              channel_id: 8eca5ad8-f7eb-471e-9682-57f658ff9091
              message_id: 0a478f14-ac8a-4b54-bc5b-51b5f00ccec5
              shortcode: thumbsup
              author_id: 8eca5ad7-f7eb-471e-9682-57f658ff9091
    RemoveReactionRequest:
      name: RemoveReactionRequest
      title: remove_reaction request
      description: |
        Message containing a request to remove a reaction from a message.
      contentType: application/json
      tags:
        - name: Messages
        - name: Reactions
      payload:
        type: object
        additionalProperties: false
        required:
          - action
          - payload
        properties:
          action:
            type: string
            const: remove_reaction
          request_id:
            $ref: '#/components/schemas/RequestId'
          payload:
            type: object
            additionalProperties: false
            required:
              - channel_id
              - message_id
              - shortcode
            properties:
              channel_id:
                type: string
                description: ID of the channel with the message.
              message_id:
                type: string
                description: ID of the message to remove the reaction from.
              shortcode:
                $ref: '#/components/schemas/ReactionShortcode'
      examples:
        - name: RemoveReactionRequestExample
          summary: A remove_reaction request example
          payload:
            action: remove_reaction
            request_id: foo-baz-bar-420
            payload:
              channel_id: 8eca5ad8-f7eb-471e-9682-57f658ff9091
              message_id: 0a478f14-ac8a-4b54-bc5b-51b5f00ccec5
              shortcode: thumbsup
    RemoveReactionResponse:
      name: RemoveReactionResponse
      title: remove_reaction response
      description: Message sent by the server as a response to the remove_reaction request.
      contentType: application/json
      tags:
        - name: Messages
        - name: Reactions
      payload:
        type: object
        additionalProperties: false
        required:
          - action
          - success
          - payload
        properties:
          request_id:
            $ref: '#/components/schemas/RequestId'
          success:
            $ref: '#/components/schemas/Success'
          action:
            type: string
            const: remove_reaction
          payload:
            type: object
            description: Payload of the response.
            oneOf:
              - $ref: '#/components/schemas/EmptyPayload'
              - $ref: '#/components/schemas/ErrorPayload'
      examples:
        - name: RemoveReactionResponseExampleOK
          summary: A remove_reaction response example with success
          payload:
            action: remove_reaction
            request_id: foo-baz-bar-420
            type: response
            success: true
            payload: {}
        - name: RemoveReactionResponseExampleError
          summary: A remove_reaction response example with error
          payload:
            action: remove_reaction
            request_id: foo-baz-bar-420
            success: false
            payload:
              error:
                type: validation
                message: invalid message format
    ReactionRemoved:
      name: ReactionRemoved
      title: reaction_removed push
      description: |
        A message from the server to the clients subscribed to the channel, 
        sent when a reaction is removed from a message.
      contentType: application/json
      tags:
        - name: Messages
        - name: Reactions
      payload:
        type: object
        additionalProperties: false
        required:
          - action
          - type
          - payload
        properties:
          action:
            type: string
            const: reaction_removed
          type:
            type: string
            const: push
          payload:
            type: object
            additionalProperties: false
            required:
              - channel_id
              - author_id
              - message_id
              - shortcode
            properties:
              channel_id:
                type: string
                description: ID of the channel where the message was received.
              message_id:
                type: string
                format: uuid
                description: ID of the message.
              shortcode:
                $ref: '#/components/schemas/ReactionShortcode'
              author_id:
                type: string
                format: uuid
                description: ID of the user who removed the reaction.
      examples:
        - name: ReactionRemovedExample
          summary: A reaction_removed push example
          payload:
            action: reaction_removed
            type: push
            payload:
              channel_id: 8eca5ad8-f7eb-471e-9682-57f658ff9091
              message_id: 0a478f14-ac8a-4b54-bc5b-51b5f00ccec5
              shortcode: thumbsup
              author_id: 8eca5ad7-f7eb-471e-9682-57f658ff9091
    CreateChannelRequest:
      name: CreateChannelRequest
      title: create_channel request
      description: Message containing a request to create a channel.
      contentType: application/json
      tags:
        - name: Channels
      payload:
        type: object
        additionalProperties: false
        required:
          - action
          - payload
        properties:
          action:
            type: string
            const: create_channel
          request_id:
            $ref: '#/components/schemas/RequestId'
          payload:
            type: object
            additionalProperties: false
            required:
              - type
            properties:
              name:
                type: string
                description: Name of the channel.
              type:
                type: string
                enum:
                  - public
                  - private
                description: Type of the channel.
              members:
                type: array
                items:
                  type: string
                description: IDs of the users to add to the channel.
      examples:
        - name: CreateChannelRequestExample
          summary: A create_channel request example
          payload:
            action: create_channel
            request_id: foo-baz-bar-420
            payload:
              name: random
              type: public
              members:
                - 8eca5ad7-f7eb-471e-9682-57f658ff9091
    CreateChannelResponse:
      name: CreateChannelResponse
      title: create_channel response
      description: Message sent by the server as a response to the create_channel request.
      contentType: application/json
      tags:
        - name: Channels
      payload:
        type: object
        additionalProperties: false
        required:
          - action
          - success
          - payload
        properties:
          request_id:
            $ref: '#/components/schemas/RequestId'
          success:
            $ref: '#/components/schemas/Success'
          action:
            type: string
            const: create_channel
          payload:
            type: object
            description: Payload of the response.
            oneOf:
              - $ref: '#/components/schemas/CreateChannelResponsePayload'
              - $ref: '#/components/schemas/ErrorPayload'
      examples:
        - name: CreateChannelResponseExampleOK
          summary: A create_channel response example with success
          payload:
            request_id: foo-baz-bar-420
            type: response
            success: true
            action: create_channel
            payload:
              id: f5481ae7-e974-4137-9d06-b70c8e1ab795
        - name: CreateChannelResponseExampleError
          summary: A create_channel response example with error
          payload:
            request_id: foo-baz-bar-420
            success: false
            action: create_channel
            payload:
              error:
                type: validation
                message: invalid message format
    ChannelCreated:
      name: ChannelCreated
      title: channel_created push
      description: |
        A message from the server to the clients subscribed to the channel, 
        sent when a channel is created.
      contentType: application/json
      tags:
        - name: Channels
      payload:
        type: object
        additionalProperties: false
        required:
          - action
          - type
          - payload
        properties:
          action:
            type: string
            const: channel_created
          type:
            type: string
            const: push
          payload:
            type: object
            additionalProperties: false
            required:
              - channel_id
              - type
              - created_by
            properties:
              channel_id:
                type: string
                description: ID of the channel that was created.
              type:
                type: string
                enum:
                  - public
                  - private
                description: Type of the channel.
              name:
                type: string
                description: Name of the channel.
              created_by:
                type: string
                description: ID of the user who created the channel.
      examples:
        - name: ChannelCreatedExample
          summary: A channel_created push example
          payload:
            action: channel_created
            type: push
            payload:
              channel_id: 8eca5ad8-f7eb-471e-9682-57f658ff9091
              type: public
              name: random
              created_by: 8eca5ad7-f7eb-471e-9682-57f658ff9091
    RenameChannelRequest:
      name: RenameChannelRequest
      title: rename_channel request
      description: Message containing a request to rename a channel.
      contentType: application/json
      tags:
        - name: Channels
      payload:
        type: object
        additionalProperties: false
        required:
          - action
          - payload
        properties:
          action:
            type: string
            const: rename_channel
          request_id:
            $ref: '#/components/schemas/RequestId'
          payload:
            type: object
            additionalProperties: false
            required:
              - channel_id
              - name
            properties:
              channel_id:
                type: string
                format: uuid
                description: ID of the channel.
              name:
                type: string
                description: The new name of the channel.
      examples:
        - name: RenameChannelRequestExample
          summary: A rename_channel request example
          payload:
            action: rename_channel
            request_id: foo-baz-bar-420
            payload:
              channel_id: 8eca5ad8-f7eb-471e-9682-57f658ff9091
              name: this-is-new-channel-name
    RenameChannelResponse:
      name: RenameChannelResponse
      title: rename_channel response
      description: Message sent by the server as a response to the rename_channel request.
      contentType: application/json
      tags:
        - name: Channels
      payload:
        type: object
        additionalProperties: false
        required:
          - action
          - success
          - payload
        properties:
          request_id:
            $ref: '#/components/schemas/RequestId'
          success:
            $ref: '#/components/schemas/Success'
          action:
            type: string
            const: rename_channel
          payload:
            type: object
            description: Payload of the response.
            oneOf:
              - $ref: '#/components/schemas/EmptyPayload'
              - $ref: '#/components/schemas/ErrorPayload'
      examples:
        - name: RenameChannelResponseExampleOK
          summary: A rename_channel response example with success
          payload:
            request_id: foo-baz-bar-420
            type: response
            success: true
            action: rename_channel
            payload: {}
        - name: RenameChannelResponseExampleError
          summary: A rename_channel response example with error
          payload:
            request_id: foo-baz-bar-420
            success: false
            action: rename_channel
            payload:
              error:
                type: validation
                message: invalid message format
    ChannelRenamed:
      name: ChannelRenamed
      title: channel_renamed push
      description: |
        A message from the server to the clients subscribed to the channel, 
        sent when a channel is renamed.
      contentType: application/json
      tags:
        - name: Channels
      payload:
        type: object
        additionalProperties: false
        required:
          - action
          - type
          - payload
        properties:
          action:
            type: string
            const: channel_renamed
          type:
            type: string
            const: push
          payload:
            type: object
            additionalProperties: false
            required:
              - channel_id
              - name
              - renamed_by
            properties:
              channel_id:
                type: string
                format: uuid
                description: ID of the channel that was renamed.
              name:
                type: string
                description: THe new name of the channel.
              renamed_by:
                type: string
                description: ID of the user who renamed the channel.
      examples:
        - name: ChannelRenamedExample
          summary: A channel_renamed push example
          payload:
            action: channel_renamed
            type: push
            payload:
              channel_id: 8eca5ad8-f7eb-471e-9682-57f658ff9091
              name: this-is-new-channel-name
              renamed_by: 8eca5ad7-f7eb-471e-9682-57f658ff9091
    ArchiveChannelRequest:
      name: ArchiveChannelRequest
      title: archive_channel request
      description: Message containing a request to archive a channel.
      contentType: application/json
      tags:
        - name: Channels
      payload:
        type: object
        additionalProperties: false
        required:
          - action
          - payload
        properties:
          action:
            type: string
            const: archive_channel
          request_id:
            $ref: '#/components/schemas/RequestId'
          payload:
            type: object
            additionalProperties: false
            required:
              - channel_id
            properties:
              channel_id:
                type: string
                format: uuid
                description: ID of the channel.
      examples:
        - name: ArchiveChannelRequestExample
          summary: An archive_channel request example
          payload:
            action: archive_channel
            request_id: foo-baz-bar-420
            payload:
              channel_id: 8eca5ad8-f7eb-471e-9682-57f658ff9091
    ArchiveChannelResponse:
      name: ArchiveChannelResponse
      title: archive_channel response
      description: Message sent by the server as a response to the archive_channel request.
      contentType: application/json
      tags:
        - name: Channels
      payload:
        type: object
        additionalProperties: false
        required:
          - action
          - success
          - payload
        properties:
          request_id:
            $ref: '#/components/schemas/RequestId'
          success:
            $ref: '#/components/schemas/Success'
          action:
            type: string
            const: archive_channel
          payload:
            type: object
            description: Payload of the response.
            oneOf:
              - $ref: '#/components/schemas/EmptyPayload'
              - $ref: '#/components/schemas/ErrorPayload'
      examples:
        - name: ArchiveChannelResponseExampleOK
          summary: An archive_channel response example with success
          payload:
            request_id: foo-baz-bar-420
            type: response
            success: true
            action: archive_channel
            payload: {}
        - name: ArchiveChannelResponseExampleError
          summary: An archive_channel response example with error
          payload:
            request_id: foo-baz-bar-420
            success: false
            action: archive_channel
            payload:
              error:
                type: validation
                message: invalid message format
    ChannelArchived:
      name: ChannelArchived
      title: channel_archived push
      description: |
        A message from the server to the clients subscribed to the channel, 
        sent when a channel is archived.
      contentType: application/json
      tags:
        - name: Channels
      payload:
        type: object
        additionalProperties: false
        required:
          - action
          - type
          - payload
        properties:
          action:
            type: string
            const: channel_archived
          type:
            type: string
            const: push
          payload:
            type: object
            additionalProperties: false
            required:
              - channel_id
              - archived_by
            properties:
              channel_id:
                type: string
                format: uuid
                description: ID of the channel that was archived.
              archived_by:
                type: string
                description: ID of the user who archived the channel.
      examples:
        - name: ChannelArchivedExample
          summary: A channel_archived push example
          payload:
            action: channel_archived
            type: push
            payload:
              channel_id: 8eca5ad8-f7eb-471e-9682-57f658ff9091
              archived_by: 8eca5ad7-f7eb-471e-9682-57f658ff9091
    UnarchiveChannelRequest:
      name: UnarchiveChannelRequest
      title: unarchive_channel request
      description: Message containing a request to unarchive a channel.
      contentType: application/json
      tags:
        - name: Channels
      payload:
        type: object
        additionalProperties: false
        required:
          - action
          - payload
        properties:
          action:
            type: string
            const: unarchive_channel
          request_id:
            $ref: '#/components/schemas/RequestId'
          payload:
            type: object
            additionalProperties: false
            required:
              - channel_id
            properties:
              channel_id:
                type: string
                format: uuid
                description: ID of the channel.
      examples:
        - name: UnarchiveChannelRequestExample
          summary: An unarchive_channel request example
          payload:
            action: unarchive_channel
            request_id: foo-baz-bar-420
            payload:
              channel_id: 8eca5ad8-f7eb-471e-9682-57f658ff9091
    UnarchiveChannelResponse:
      name: UnarchiveChannelResponse
      title: unarchive_channel response
      description: Message sent by the server as a response to the unarchive_channel request.
      contentType: application/json
      tags:
        - name: Channels
      payload:
        type: object
        additionalProperties: false
        required:
          - action
          - success
          - payload
        properties:
          request_id:
            $ref: '#/components/schemas/RequestId'
          success:
            $ref: '#/components/schemas/Success'
          action:
            type: string
            const: unarchive_channel
          payload:
            type: object
            description: Payload of the response.
            oneOf:
              - $ref: '#/components/schemas/EmptyPayload'
              - $ref: '#/components/schemas/ErrorPayload'
      examples:
        - name: UnarchiveChannelResponseExampleOK
          summary: An unarchive_channel response example with success
          payload:
            request_id: foo-baz-bar-420
            type: response
            success: true
            action: unarchive_channel
            payload: {}
        - name: UnarchiveChannelResponseExampleError
          summary: An unarchive_channel response example with error
          payload:
            request_id: foo-baz-bar-420
            success: false
            action: unarchive_channel
            payload:
              error:
                type: validation
                message: invalid message format
    ChannelUnarchived:
      name: ChannelUnarchived
      title: channel_unarchived push
      description: |
        A message from the server to the clients subscribed to the channel, 
        sent when a channel is unarchived.
      contentType: application/json
      tags:
        - name: Channels
      payload:
        type: object
        additionalProperties: false
        required:
          - action
          - type
          - payload
        properties:
          action:
            type: string
            const: channel_unarchived
          type:
            type: string
            const: push
          payload:
            type: object
            additionalProperties: false
            required:
              - channel_id
              - unarchived_by
            properties:
              channel_id:
                type: string
                format: uuid
                description: ID of the channel that was unarchived.
              unarchived_by:
                type: string
                description: ID of the user who unarchived the channel.
      examples:
        - name: ChannelUnarchivedExample
          summary: A channel_unarchived push example
          payload:
            action: channel_unarchived
            type: push
            payload:
              channel_id: 8eca5ad8-f7eb-471e-9682-57f658ff9091
              unarchived_by: 8eca5ad7-f7eb-471e-9682-57f658ff9091
    AddUserToChannelRequest:
      name: AddUserToChannelRequest
      title: add_user_to_channel request
      description: Message containing a request to add a user to a channel.
      contentType: application/json
      tags:
        - name: Channels
      payload:
        type: object
        additionalProperties: false
        required:
          - action
          - payload
        properties:
          action:
            type: string
            const: add_user_to_channel
          request_id:
            $ref: '#/components/schemas/RequestId'
          payload:
            type: object
            additionalProperties: false
            required:
              - channel_id
              - user_id
            properties:
              channel_id:
                type: string
                format: uuid
                description: ID of the channel.
              user_id:
                type: string
                format: uuid
                description: ID of the user to add to the channel.
      examples:
        - name: AddUserToChannelRequestExample
          summary: An add_user_to_channel request example
          payload:
            action: add_user_to_channel
            request_id: foo-baz-bar-420
            payload:
              channel_id: 8eca5ad8-f7eb-471e-9682-57f658ff9091
              user_id: 8eca5ad7-f7eb-471e-9682-57f658ff9091
    AddUserToChannelResponse:
      name: AddUserToChannelResponse
      title: add_user_to_channel response
      description: Message sent by the server as a response to the add_user_to_channel request.
      contentType: application/json
      tags:
        - name: Channels
      payload:
        type: object
        additionalProperties: false
        required:
          - action
          - success
          - payload
        properties:
          request_id:
            $ref: '#/components/schemas/RequestId'
          success:
            $ref: '#/components/schemas/Success'
          action:
            type: string
            const: add_user_to_channel
          payload:
            type: object
            description: Payload of the response.
            oneOf:
              - $ref: '#/components/schemas/AddUserToChannelResponsePayload'
              - $ref: '#/components/schemas/ErrorPayload'
      examples:
        - name: AddUserToChannelResponseExampleOK
          summary: An add_user_to_channel response example with success
          payload:
            request_id: foo-baz-bar-420
            type: response
            success: true
            action: add_user_to_channel
            payload: {}
        - name: AddUserToChannelResponseExampleError
          summary: An add_user_to_channel response example with error
          payload:
            request_id: foo-baz-bar-420
            success: false
            action: add_user_to_channel
            payload:
              error:
                type: validation
                message: invalid message format
    UserAddedToChannel:
      name: UserAddedToChannel
      title: user_added_to_channel push
      description: |
        A message from the server to the clients subscribed to the channel, 
        sent when a user is added to a channel.
      contentType: application/json
      tags:
        - name: Channels
      payload:
        type: object
        additionalProperties: false
        required:
          - action
          - type
          - payload
        properties:
          action:
            type: string
            const: user_added_to_channel
          type:
            type: string
            const: push
          payload:
            type: object
            additionalProperties: false
            required:
              - channel_id
              - user_id
              - added_by
            properties:
              channel_id:
                type: string
                format: uuid
                description: ID of the channel.
              user_id:
                type: string
                format: uuid
                description: ID of the user who was added to the channel.
              added_by:
                type: string
                format: uuid
                description: ID of the user who added the user to the channel.
      examples:
        - name: UserAddedToChannelExample
          summary: A user_added_to_channel push example
          payload:
            action: user_added_to_channel
            type: push
            payload:
              channel_id:
                type: string
                format: uuid
                description: ID of the channel.
              user_id:
                type: string
                format: uuid
                description: ID of the user who was added to the channel.
              added_by:
                type: string
                format: uuid
                description: ID of the user who added the user to the channel.
    RemoveUserFromChannelRequest:
      name: RemoveUserFromChannelRequest
      title: remove_user_from_channel request
      description: |
        Message containing a request to remove a user from a channel.
      contentType: application/json
      tags:
        - name: Channels
      payload:
        type: object
        additionalProperties: false
        required:
          - action
          - payload
        properties:
          action:
            type: string
            const: remove_user_from_channel
          request_id:
            $ref: '#/components/schemas/RequestId'
          payload:
            type: object
            additionalProperties: false
            required:
              - channel_id
              - user_id
            properties:
              channel_id:
                type: string
                format: uuid
                description: ID of the channel.
              user_id:
                type: string
                format: uuid
                description: ID of the user to remove from the channel.
      examples:
        - name: RemoveUserFromChannelRequestExample
          summary: A remove_user_from_channel request example
          payload:
            action: remove_user_from_channel
            request_id: foo-baz-bar-420
            payload:
              channel_id: 8eca5ad8-f7eb-471e-9682-57f658ff9091
              user_id: 8eca5ad7-f7eb-471e-9682-57f658ff9091
    RemoveUserFromChannelResponse:
      name: RemoveUserFromChannelResponse
      title: remove_user_from_channel response
      description: Message sent by the server as a response to the remove_user_from_channel request.
      contentType: application/json
      tags:
        - name: Channels
      payload:
        type: object
        additionalProperties: false
        required:
          - action
          - success
          - payload
        properties:
          request_id:
            $ref: '#/components/schemas/RequestId'
          success:
            $ref: '#/components/schemas/Success'
          action:
            type: string
            const: remove_user_from_channel
          payload:
            type: object
            description: Payload of the response.
            oneOf:
              - $ref: '#/components/schemas/EmptyPayload'
              - $ref: '#/components/schemas/ErrorPayload'
      examples:
        - name: RemoveUserFromChannelResponseExampleOK
          summary: A remove_user_from_channel response example with success
          payload:
            request_id: foo-baz-bar-420
            type: response
            success: true
            action: remove_user_from_channel
            payload: {}
        - name: RemoveUserFromChannelResponseExampleError
          summary: A remove_user_from_channel response example with error
          payload:
            request_id: foo-baz-bar-420
            success: false
            action: remove_user_from_channel
            payload:
              error:
                type: validation
                message: invalid message format
    UserRemovedFromChannel:
      name: UserRemovedFromChannel
      title: user_removed_from_channel push
      description: |
        A message from the server to the clients subscribed to the channel, 
        sent when a user is removed from a channel.
      contentType: application/json
      tags:
        - name: Channels
      payload:
        type: object
        additionalProperties: false
        required:
          - action
          - type
          - payload
        properties:
          action:
            type: string
            const: user_removed_from_channel
          type:
            type: string
            const: push
          payload:
            type: object
            additionalProperties: false
            required:
              - channel_id
              - user_id
              - removed_by
            properties:
              channel_id:
                type: string
                format: uuid
                description: ID of the channel.
              user_id:
                type: string
                format: uuid
                description: ID of the user who was removed from the channel.
              removed_by:
                type: string
                format: uuid
                description: ID of the user who removed the user from the channel.
      examples:
        - name: UserRemovedFromChannelExample
          summary: A user_removed_from_channel push example
          payload:
            action: user_removed_from_channel
            type: push
            payload:
              channel_id:
                type: string
                format: uuid
                description: ID of the channel.
              user_id:
                type: string
                format: uuid
                description: ID of the user who was removed from the channel.
              removed_by:
                type: string
                format: uuid
                description: ID of the user who removed the user from the channel.
    GetChannelRequest:
      name: GetChannelRequest
      title: get_channel request
      description: Message containing a request to get non-archived channel by ID.
      contentType: application/json
      tags:
        - name: Channels
      payload:
        type: object
        additionalProperties: false
        required:
          - channel_id
        properties:
          channel_id:
            type: string
            format: uuid
            description: ID of the channel.
      examples:
        - name: GetChannelRequestExample
          summary: A get_channel request example
          payload:
            action: get_channel
            request_id: foo-baz-bar-420
            payload:
              channel_id:
                type: string
                format: uuid
                description: ID of the channel.
    GetChannelResponse:
      name: GetChannelResponse
      title: get_channel response
      description: Message sent by the server as a response to the get_channel request.
      contentType: application/json
      tags:
        - name: Channels
      payload:
        type: object
        additionalProperties: false
        required:
          - action
          - success
          - payload
        properties:
          request_id:
            $ref: '#/components/schemas/RequestId'
          success:
            $ref: '#/components/schemas/Success'
          action:
            type: string
            const: get_channel
          payload:
            $ref: '#/components/schemas/Channel'
      examples:
        - name: GetChannelResponseExampleOK
          summary: A get_channel response example with success
          payload:
            request_id: foo-baz-bar-420
            type: response
            success: true
            action: get_channel
            payload:
              - type: public
                id: f5481ae7-e974-4137-9d06-b70c8e1ab795
                name: random
                created_by: 8eca5ad7-f7eb-471e-9682-57f658ff9091
        - name: GetChannelResponseExampleError
          summary: A get_channel response example with error
          payload:
            request_id: foo-baz-bar-420
            success: false
            action: get_channel
            payload:
              error:
                type: validation
                message: invalid message format
    ListChannelsRequest:
      name: ListChannelsRequest
      title: list_channels request
      description: Message containing a request to list all non-archived channels.
      contentType: application/json
      tags:
        - name: Channels
      payload:
        type: object
        additionalProperties: false
      examples:
        - name: ListChannelsRequestExample
          summary: A list_channels request example
          payload:
            action: list_channels
            request_id: foo-baz-bar-420
            payload: {}
    ListChannelsResponse:
      name: ListChannelsResponse
      title: list_channels response
      description: Message sent by the server as a response to the list_channels request.
      contentType: application/json
      tags:
        - name: Channels
      payload:
        type: object
        additionalProperties: false
        required:
          - action
          - success
          - payload
        properties:
          request_id:
            $ref: '#/components/schemas/RequestId'
          success:
            $ref: '#/components/schemas/Success'
          action:
            type: string
            const: list_channels
          payload:
            type: array
            description: Payload of the response.
            items:
              $ref: '#/components/schemas/Channel'
      examples:
        - name: ListChannelsResponseExampleOK
          summary: A list_channels response example with success
          payload:
            request_id: foo-baz-bar-420
            type: response
            success: true
            action: list_channels
            payload:
              - type: public
                id: f5481ae7-e974-4137-9d06-b70c8e1ab795
                name: random
                created_by: 8eca5ad7-f7eb-471e-9682-57f658ff9091
        - name: ListChannelsResponseExampleError
          summary: A list_channels response example with error
          payload:
            request_id: foo-baz-bar-420
            success: false
            action: list_channels
            payload:
              error:
                type: validation
                message: invalid message format
    ListArchivedChannelsRequest:
      name: ListArchivedChannelsRequest
      title: list_archived_channels request
      description: Message containing a request to list all archived channels.
      contentType: application/json
      tags:
        - name: Channels
      payload:
        type: object
        additionalProperties: false
      examples:
        - name: ListArchivedChannelsRequestExample
          summary: A list_archived_channels request example
          payload:
            action: list_archived_channels
            request_id: foo-baz-bar-420
            payload: {}
    ListArchivedChannelsResponse:
      name: ListArchivedChannelsResponse
      title: list_archived_channels response
      description: Message sent by the server as a response to the list_archived_channels request.
      contentType: application/json
      tags:
        - name: Channels
      payload:
        type: object
        additionalProperties: false
        required:
          - action
          - success
          - payload
        properties:
          request_id:
            $ref: '#/components/schemas/RequestId'
          success:
            $ref: '#/components/schemas/Success'
          action:
            type: string
            const: list_archived_channels
          payload:
            type: array
            description: Payload of the response.
            items:
              type: object
              additionalProperties: false
              required:
                - type
                - id
                - name
                - created_by
              properties:
                type:
                  type: string
                  description: Channel type.
                  enum:
                    - public
                    - direct
                channel_id:
                  type: string
                  description: ID of the channel.
                name:
                  type: string
                  description: Name of the channel.
                created_by:
                  type: string
                  description: ID of the user who created the channel.
      examples:
        - name: ListArchivedChannelsResponseExampleOK
          summary: A list_archived_channels response example with success
          payload:
            request_id: foo-baz-bar-420
            type: response
            success: true
            action: list_archived_channels
            payload:
              - type: public
                id: f5481ae7-e974-4137-9d06-b70c8e1ab795
                name: random
                created_by: 8eca5ad7-f7eb-471e-9682-57f658ff9091
        - name: ListArchivedChannelsResponseExampleError
          summary: A list_archived_channels response example with error
          payload:
            request_id: foo-baz-bar-420
            success: false
            action: list_archived_channels
            payload:
              error:
                type: validation
                message: invalid message format
  schemas:
    RequestId:
      type: string
      description: |
        Optional request ID set by the client. <br>
        Server reply must contain the same request ID. <br>
    Success:
      type: boolean
      description: |
        True means that the server processed the request successfully,<br>
        otherwise, the operation has failed.
    ReactionShortcode:
      type: enum
      description: |
        Shortcode of the reaction.
      enum:
        - thumbsup
        - thumbsdown
        - heart
        - white_check_mark
        - hourglass
        - cry
        - smile
      example: thumbsup
    Channel:
      type: object
      additionalProperties: false
      required:
        - type
        - channel_id
        - created_by
      properties:
        type:
          type: string
          description: Channel type.
          enum:
            - public
            - direct
        channel_id:
          type: string
          description: ID of the channel.
        name:
          type: string
          description: Name of the channel. Valid for public channels.
        members:
          type: array
          items:
            type: string
            description: ID of the user who is a member of the channel. Empty for `general` channel, but all users are members of it.
        created_by:
          type: string
          description: ID of the user who created the channel.
        last_message_created_at:
          type: string
          format: date-time
          description: Date of the last message in the channel.
          example: 2024-01-24T12:36:05.987197Z
        seen_up_to:
          type: string
          format: date-time
          description: Date of the last message seen by the requester.
          example: 2024-01-24T12:36:05.987197Z
    Message:
      type: object
      oneOf:
        - type: object
          title: Text message
          required:
            - message_id
            - author_id
            - created_at
            - type
            - reactions
            - text
          properties:
            message_id:
              type: string
              format: uuid
              description: ID of the message.
              example: 0a478f14-ac8a-4b54-bc5b-51b5f00ccec5
            author_id:
              type: string
              description: ID of the message author.
              example: 8eca5ad7-f7eb-471e-9682-57f658ff9091
            created_at:
              type: string
              format: date-time
              description: Message creation date.
              example: 2024-01-24T12:36:05.987197Z
            type:
              type: string
              description: Message type.
              const: text
            reactions:
              type: array
              items:
                type: object
                properties:
                  shortcode:
                    type: string
                    description: Shortcode of the reaction.
                    example: thumbsup
                  author_ids:
                    type: array
                    items:
                      type: string
                      description: ID of the reaction author.
                      example: 8eca5ad7-f7eb-471e-9682-57f658ff9091
            text:
              type: string
              description: Message text.
              example: Hello, World!
        - type: object
          title: File message
          required:
            - message_id
            - author_id
            - created_at
            - type
            - reactions
            - url
            - name
            - content_type
            - size
          properties:
            message_id:
              type: string
              format: uuid
              description: ID of the message.
              example: 0a478f14-ac8a-4b54-bc5b-51b5f00ccec5
            author_id:
              type: string
              description: ID of the message author.
              example: 8eca5ad7-f7eb-471e-9682-57f658ff9091
            created_at:
              type: string
              format: date-time
              description: Message creation date.
              example: 2024-01-24T12:36:05.987197Z
            type:
              type: string
              description: Message type.
              const: file
            reactions:
              type: array
              items:
                type: object
                properties:
                  shortcode:
                    type: string
                    description: Shortcode of the reaction.
                    example: thumbsup
                  author_ids:
                    type: array
                    items:
                      type: string
                      description: ID of the reaction author.
                      example: 8eca5ad7-f7eb-471e-9682-57f658ff9091
            url:
              type: string
              format: uri
              description: URL of the file.
              example: https://cdn.files-text.com/api/chatapi/files/248d7a51-fc88-4495-81e2-ce4538649432/90441146b7798452df136d46d13ab0ed/test.txt
            name:
              type: string
              description: Name of the file.
              example: test.txt
            content_type:
              type: string
              description: Content type of the file.
              example: text/plain
            size:
              type: integer
              description: Size of the file in bytes.
              example: 2503
            file_details:
              type: object
              properties:
                image:
                  type: object
                  properties:
                    height:
                      type: integer
                      description: Height of the image.
                      example: 150
                    width:
                      type: integer
                      description: Width of the image.
                      example: 150
    LoginResponsePayload:
      type: object
      title: loginResponsePayload
      additionalProperties: false
      required:
        - account_id
        - organization_id
      properties:
        account_id:
          type: string
          format: uuid
          description: Account ID of the authenticated user.
        organization_id:
          type: string
          format: uuid
          description: Organization ID of the authenticated user.
      tags:
        - name: Login
    SendMessageResponsePayload:
      type: object
      title: sendMessageResponsePayload
      additionalProperties: false
      required:
        - message_id
      properties:
        message_id:
          type: string
          format: uuid
          description: ID of the sent message.
      tags:
        - name:  messages
    GetMessagesResponsePayload:
      type: object
      title: getMessagesResponsePayload
      additionalProperties: false
      required:
        - channel_id
        - total
        - messages
      properties:
        channel_id:
          type: string
          description: ID of the channel.
        total:
          type: integer
          description: Total number of messages in the channel.
        next_page_id:
          type: string
          description: ID of the next page of results.
        previous_page_id:
          type: string
          description: ID of the previous page of results.
        messages:
          type: array
          description: List of messages from a channel.
          items:
            $ref: '#/components/schemas/Message'
      tags:
        - name:  messages
    CreateChannelResponsePayload:
      type: object
      title: createChannelResponsePayload
      additionalProperties: false
      required:
        - id
      properties:
        id:
          type: string
          description: ID of the channel.
      tags:
        - name: Channels
    AddUserToChannelResponsePayload:
      type: object
      title: addUserToChannelResponsePayload
      additionalProperties: false
      required:
        - channel_id
        - user_id
      properties:
        channel_id:
          type: string
          description: ID of the channel.
        user_id:
          type: string
          description: ID of the user who was added to the channel.
      tags:
        - name: Channels
    EmptyPayload:
      type: object
      title: empty request/response payload
      additionalProperties: false
    ErrorPayload:
      type: object
      title: errorPayload
      additionalProperties: false
      required:
        - error
      properties:
        error:
          type: object
          additionalProperties: false
          required:
            - type
            - message
          properties:
            type:
              type: string
              description: Type of the error.
              example: validation
            message:
              type: string
              description: Error message.
              example: Invalid message format.