openapi: 3.0.0
info:
  title: Team Chat API - Web
  version: 1.0.0
  description: |
    Team Chat API by text is a backend service which allows communicating between users using either a websocket or the HTTP protocol.<br>
    The communication can happen on public channels or via direct messages.<br>
    This service stores messaging history and allows users to get previous messages from the channels they have joined.<br>
servers:
  - url: https://api.text.com/chat
    description: Team Chat API URL.
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
    BasicAuth:
      type: http
      scheme: basic
  responses:
    Unauthorized:
      description: Unauthorized, missing or invalid credentials.
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: object
                properties:
                  type:
                    type: string
                    example: authentication
                  message:
                    type: string
                    example: Invalid access token.
    Validation:
      description: Invalid or missing request parameters.
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: object
                properties:
                  type:
                    type: string
                    example: validation
                  message:
                    type: string
                    example: Invalid message format.
  schemas:
    Shortcode:
      description: Shortcode of the reaction.
      type: string
      enum:
        - thumbsup
        - thumbsdown
        - heart
        - white_check_mark
        - hourglass
        - cry
    ChannelID:
      type: string
      description: |
        ID of the channel. It can be a public channel (`general`),<br>
        or a private channel (`requester_id:receiver_id`)<br>
      example: general
    Message:
      oneOf:
        - $ref: '#/components/schemas/TextMessage'
        - $ref: '#/components/schemas/FileMessage'
    TextMessage:
      type: object
      required:
        - message_id
        - author_id
        - created_at
        - type
        - reactions
        - text
      properties:
        message_id:
          type: string
          format: uuid
          description: ID of the message.
          example: 0a478f14-ac8a-4b54-bc5b-51b5f00ccec5
        author_id:
          type: string
          description: ID of the message author.
          example: 8eca5ad7-f7eb-471e-9682-57f658ff9091
        created_at:
          type: string
          format: date-time
          description: Message creation date.
          example: 2024-01-24T12:36:05.987197Z
        type:
          type: string
          description: Message type.
          enum:
            - text
        reactions:
          type: array
          items:
            type: object
            properties:
              shortcode:
                $ref: '#/components/schemas/Shortcode'
              author_ids:
                type: array
                items:
                  type: string
                  description: ID of the reaction author.
                  example: 8eca5ad7-f7eb-471e-9682-57f658ff9091
        text:
          type: string
          description: Message text.
          example: Hello, World!
    FileMessage:
      type: object
      required:
        - message_id
        - author_id
        - created_at
        - type
        - reactions
        - url
        - name
        - content_type
        - size
      properties:
        message_id:
          type: string
          format: uuid
          description: ID of the message.
          example: 0a478f14-ac8a-4b54-bc5b-51b5f00ccec5
        author_id:
          type: string
          description: ID of the message author.
          example: 8eca5ad7-f7eb-471e-9682-57f658ff9091
        created_at:
          type: string
          format: date-time
          description: Message creation date.
          example: 2024-01-24T12:36:05.987197Z
        type:
          type: string
          description: Message type.
          enum:
            - text
        reactions:
          type: array
          items:
            type: object
            properties:
              shortcode:
                $ref: '#/components/schemas/Shortcode'
              author_ids:
                type: array
                items:
                  type: string
                  description: ID of the reaction author.
                  example: 8eca5ad7-f7eb-471e-9682-57f658ff9091
        url:
          type: string
          format: uri
          description: URL of the file.
          example: https://cdn.files-text.com/api/chatapi/files/248d7a51-fc88-4495-81e2-ce4538649432/90441146b7798452df136d46d13ab0ed/test.txt
        name:
          type: string
          description: Name of the file.
          example: test.txt
        content_type:
          type: string
          description: Content type of the file.
          example: text/plain
        size:
          type: integer
          description: Size of the file in bytes.
          example: 2503
        file_details:
          type: object
          properties:
            image:
              type: object
              properties:
                height:
                  type: integer
                  description: Height of the image.
                  example: 150
                width:
                  type: integer
                  description: Width of the image.
                  example: 150
    
    IncomingMessageWebhookPayload:
      type: object
      properties:
        channel:
          $ref: '#/components/schemas/ChannelID'
        message:
          $ref: '#/components/schemas/Message'
    ReactionAddedWebhookPayload:
      type: object
      properties:
        channel:
          $ref: '#/components/schemas/ChannelID'
        message_id:
          type: string
          format: uuid
          description: ID of the message.
          example: 0a478f14-ac8a-4b54-bc5b-51b5f00ccec5
        shortcode: 
          $ref: '#/components/schemas/Shortcode'
        author_id:
          type: string
          description: ID of the user who added the reaction.
          example: 8eca5ad7-f7eb-471e-9682-57f658ff9091
    ReactionRemovedWebhookPayload:
      type: object
      properties:
        channel:
          $ref: '#/components/schemas/ChannelID'
        message_id:
          type: string
          format: uuid
          description: ID of the message.
          example: 0a478f14-ac8a-4b54-bc5b-51b5f00ccec5
        shortcode:
          $ref: '#/components/schemas/Shortcode'
        author_id:
          type: string
          description: ID of the user who removed their reaction.
paths:
  /action/send_message:
    post:
      summary: Send message
      description: Sends a new message to the provided channel.
      tags:
        - Messages
      security:
        - BearerAuth: []
        - BasicAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - channel
                - message
              properties:
                channel:
                  $ref: '#/components/schemas/ChannelID'
                message:
                  type: object
                  oneOf:
                    - type: object
                      required:
                        - type
                        - text
                      properties:
                        type:
                          type: string
                          description: Message type (text).
                          enum:
                            - text
                        text:
                          type: string
                          description: Message text.
                          example: Hello, World!
                    - type: object
                      required:
                        - type
                        - url
                      properties:
                        type:
                          type: string
                          description: Message type (file).
                          enum:
                            - file
                        url:
                          type: string
                          format: uri
                          description: URL of the temporarily uploaded file.
                          example: https://cdn.files-text.com/api/chatapi/tmp/248d7a51-fc88-4495-81e2-ce4538649432/90441146b7798452df136d46d13ab0ed/test.txt

      responses:
        "200":
          description: Message sent successfully, contains ID of the sent message.
          content:
            application/json:
              schema:
                type: object
                required:
                  - message_id
                properties:
                  message_id:
                    type: string
                    format: uuid
                    description: ID of the sent message.
                    example: 0a478f14-ac8a-4b54-bc5b-51b5f00ccec5
        "401":
          $ref: '#/components/responses/Unauthorized'
        "422":
          $ref: '#/components/responses/Validation'
  /action/get_messages:
    post:
      summary: Get messages
      description: Gets messages from the provided channel.
      tags:
        - Messages
      security:
        - BearerAuth: []
        - BasicAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - channel
              properties:
                channel:
                  $ref: '#/components/schemas/ChannelID'
                page_id:
                  type: string
                  description: ID of the page of results to fetch. It cannot be combined with the `limit` or `sort_order` parameters.
                  example: MjEzNzphc2M6MDp0cnVlOjY5
                limit:
                  type: integer
                  minimum: 1
                  maximum: 100
                  description: Number of messages to fetch on one page. The default value is 25.
                  example: 10
                sort_order:
                  type: string
                  enum:
                    - asc
                    - desc
                  description: Sort order of the messages. The default value is `desc`.
      responses:
        "200":
          description: Contains the list of messages from the requested channel.
          content:
            application/json:
              schema:
                type: object
                required:
                  - channel
                  - total
                  - next_page_id
                  - previous_page_id
                  - messages
                properties:
                  channel:
                    $ref: '#/components/schemas/ChannelID'
                  total:
                    type: integer
                    description: Total number of messages in the channel.
                    example: 1
                  next_page_id:
                    type: string
                    description: ID of the next page of results.
                    example: MjEzNzphc2M6MDp0cnVlOjY5
                  previous_page_id:
                    type: string
                    description: ID of the previous page of results.
                    example: MjEzNzphc2M6MDp0cnVlOjY5
                  messages:
                    type: array
                    items:
                      $ref: '#/components/schemas/Message'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "422":
          $ref: '#/components/responses/Validation'
  /action/add_reaction:
    post:
      summary: Add message reaction
      description: Adds a reaction of the provided shortcode to the message.
      tags:
        - Reactions
      security:
        - BearerAuth: []
        - BasicAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - message_id
                - channel
                - shortcode
              properties:
                message_id:
                  type: string
                  description: ID of the message to react to.
                  format: uuid
                  example: 0a478f14-ac8a-4b54-bc5b-51b5f00ccec5
                channel:
                  $ref: '#/components/schemas/ChannelID'
                shortcode:
                  $ref: '#/components/schemas/Shortcode'
      responses:
        "200":
          description: Reaction added successfully.
          content:
            application/json:
              schema:
                type: object
        "401":
          $ref: '#/components/responses/Unauthorized'
        "422":
          $ref: '#/components/responses/Validation'
  /action/remove_reaction:
    post:
      summary: Remove message reaction
      description: Removes a reaction from a message of ID provided in the request body.
      tags:
        - Reactions
      security:
        - BearerAuth: []
        - BasicAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - message_id
                - channel
                - shortcode
              properties:
                message_id:
                  type: string
                  description: ID of the message to remove the reaction from.
                  format: uuid
                  example: 0a478f14-ac8a-4b54-bc5b-51b5f00ccec5
                channel:
                  type: string
                  description: ID of the channel where the message is located.
                  example: general
                shortcode:
                  $ref: '#/components/schemas/Shortcode'
      responses:
        "200":
          description: Reaction removed successfully.
          content:
            application/json:
              schema:
                type: object
        "401":
          $ref: '#/components/responses/Unauthorized'
        "422":
          $ref: '#/components/responses/Validation'
  /action/upload_file:
    post:
      summary: Upload file
      description: Uploads a file to a temporary storage. After sending the file as a message in any channel, it is moved to permanent storage. Max allowed size is 10MB.
      tags:
        - Files
      security:
        - BearerAuth: []
        - BasicAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - file
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "200":
          description: File uploaded successfully, contains URL of the uploaded file.
          content:
            application/json:
              schema:
                type: object
                required:
                  - url
                properties:
                  url:
                    type: string
                    format: uri
                    description: URL of the uploaded file.
                    example: https://cdn.files-text.com/api/chatapi/tmp/248d7a51-fc88-4495-81e2-ce4538649432/90441146b7798452df136d46d13ab0ed/test.txt
        "401":
          $ref: '#/components/responses/Unauthorized'
        "422":
          $ref: '#/components/responses/Validation'
  /action/register_webhook:
    post:
      summary: Register a webhook
      description: >-
        Registers a webhook that will be triggered for a certain event.<br>
        Required token scope: `webhooks.configuration:rw`.<br>
        You can register up to 3 webhooks per action per client ID.<br>
      tags:
        - Webhooks
      security:
        - BearerAuth: []
        - BasicAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - action
                - secret_key
                - url
              properties:
                action:
                  type: string
                  enum:
                    - incoming_message
                    - reaction_added
                    - reaction_removed
                  description: Action that will trigger the webhook.
                  example: incoming_message
                secret_key:
                  type: string
                  description: Secret key that will be used to sign the webhook payload.
                  maxLength: 255
                  example: g*iXffXhUExfUp22hN8gH4At
                url:
                  type: string
                  format: uri 
                  description: URL that will be called when a webhook is triggered.
                  maxLength: 255
                  example: https://my-service.com/webhook
                description:
                  type: string
                  description: Optional description for the webhook.
                  example: This webhook is used for updates when someone sends a new message
                owner_client_id:
                  type: string
                  description: >-
                    ID of the client that owns the webhook<br>
                    Required only when using Personal Access Token for authentication.<br>
                  example: 2e4311458e09afb17e13c8a0c6d09732
      callbacks:
        webhook:
          '{$request.body#/url}':
            post:
              parameters:
                - name: x-secret-key
                  in: header
                  description: Secret key that was used to sign the webhook payload.
                  schema:
                    type: string
              requestBody:
                content:
                  application/json:
                    schema:
                      type: object
                      required:
                        - webhook_id
                        - action
                        - organization_id
                        - payload
                      properties:
                        webhook_id:
                          type: string
                          format: uuid
                          description: ID of the webhook that was triggered.
                          example: 0a478f14-ac8a-4b54-bc5b-51b5f00ccec5
                        action:
                          type: string
                          enum:
                            - incoming_message
                            - reaction_added
                            - reaction_removed
                          description: Action that triggered the webhook.
                          example: incoming_message    
                        organization_id:
                          type: string
                          format: uuid
                          description: ID of the organization where the triggering action happened.  
                          example: 1a102f16-4b54-ac8a-bc5b-421ef00ccad6 
                        payload:
                          type: object
                          description: Payload of the webhook.
                          oneOf:
                            - $ref: '#/components/schemas/IncomingMessageWebhookPayload'
                            - $ref: '#/components/schemas/ReactionAddedWebhookPayload'
                            - $ref: '#/components/schemas/ReactionRemovedWebhookPayload'
              responses:
                "200":
                  description: Your server returns this code if it accepts the callback.
      responses:
        "200":
          description: Webhook registered successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                    description: ID of the registered webhook
                    example: 0a478f14-ac8a-4b54-bc5b-51b5f00ccec5
        "401":
          $ref: '#/components/responses/Unauthorized'
        "422":
          $ref: '#/components/responses/Validation'
  /action/unregister_webhook:
    post:
      summary: Unregister a webhook
      description: Unregisters a webhook.
      tags:
        - Webhooks
      security:
        - BearerAuth: []
        - BasicAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - id
              properties:
                id:
                  type: string
                  format: uuid
                  description: ID of the webhook to unregister
                  example: 0a478f14-ac8a-4b54-bc5b-51b5f00ccec5
                owner_client_id:
                  type: string
                  description: >-
                    ID of the client that owns the webhook. Required only when using Personal Access Token for authentication.
                  example: 2e4311458e09afb17e13c8a0c6d09732
      responses:
        "200":
          description: Webhook unregistered successfully
          content:
            application/json:
              schema:
                type: object
        "401":
          $ref: '#/components/responses/Unauthorized'
        "422":
          $ref: '#/components/responses/Validation'
  /action/list_webhooks:
    post:
      summary: List webhooks
      description: Lists all webhooks registered for the provided client.
      tags:
        - Webhooks
      security:
        - BearerAuth: []
        - BasicAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                owner_client_id:
                  type: string
                  description: ID of the client that owns the webhooks. Required only when using Personal Access Token for authentication.
                  example: 2e4311458e09afb17e13c8a0c6d09732
      responses:
        "200":
          description: Contains the list of webhooks registered for the provided client.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                      description: ID of the webhook
                      example: 0a478f14-ac8a-4b54-bc5b-51b5f00ccec5
                    action:
                      type: string
                      enum:
                        - incoming_message
                        - reaction_added
                        - reaction_removed
                      description: Action that will trigger the webhook
                      example: incoming_message
                    url:
                      type: string
                      format: uri 
                      description: URL that will be called when webhook is triggered
                      example: https://my-service.com/webhook
                    description:
                      type: string
                      description: Optional description of the webhook
                      example: My webhook
                    owner_client_id:
                      type: string
                      description: ID of the client that owns the webhook.
                      example: 2e4311458e09afb17e13c8a0c6d09732
        "401":
          $ref: '#/components/responses/Unauthorized'
        "422":
          $ref: '#/components/responses/Validation'
